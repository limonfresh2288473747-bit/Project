import os
import asyncio
import logging
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = os.getenv('BOT_TOKEN', "8245368424:AAF04bbNF2KUsKfaA0Aqk7ZP5gZXLiMEsqg")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
if not BOT_TOKEN or BOT_TOKEN == "–≤–∞—à_—Ç–æ–∫–µ–Ω_–∑–¥–µ—Å—å":
    logger.error("‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
    exit(1)

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üéÆ –ò–≥—Ä—ã"), KeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")],
        [KeyboardButton(text="üéØ –ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏"), KeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å")],
        [KeyboardButton(text="üöÄ –°—Ç–∞—Ç—É—Å")]
    ],
    resize_keyboard=True
)

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    user_name = message.from_user.first_name
    await message.answer(
        f"ü§ñ –ü—Ä–∏–≤–µ—Ç, {user_name}!\n\n"
        "üéâ –Ø —Ä–∞–±–æ—Ç–∞—é –Ω–∞ Render.com 24/7!\n"
        "üöÄ –ë–æ—Ç –≤—Å–µ–≥–¥–∞ –æ–Ω–ª–∞–π–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!\n\n"
        "üìÖ –°–µ—Ä–≤–µ—Ä: Render.com\n"
        "‚è∞ –ê–ø—Ç–∞–π–º: 99.9%\n"
        "‚ö° –°—Ç–∞—Ç—É—Å: –ê–∫—Ç–∏–≤–µ–Ω",
        reply_markup=keyboard
    )
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_name} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")

@dp.message(Command("status"))
async def cmd_status(message: types.Message):
    await message.answer("‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ –Ω–∞ Render.com!\nüìä –í—Å–µ —Å–∏—Å—Ç–µ–º—ã –≤ –Ω–æ—Ä–º–µ")

@dp.message(F.text == "üéÆ –ò–≥—Ä—ã")
async def show_games(message: types.Message):
    await message.answer(
        "üéÆ –ò–≥—Ä–æ–≤–æ–π —Ü–µ–Ω—Ç—Ä:\n\n"
        "üéØ –ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏\n"
        "üß© –í–∏–∫—Ç–æ—Ä–∏–Ω–∞\n"
        "üîç –ó–∞–≥–∞–¥–∫–∏\n"
        "üé≤ –°–ª—É—á–∞–π–Ω–∞—è –∏–≥—Ä–∞\n\n"
        "–í—ã–±–µ—Ä–∏ –∏–≥—Ä—É –∏–∑ –º–µ–Ω—é!"
    )

@dp.message(F.text == "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
async def show_stats(message: types.Message):
    await message.answer(
        "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:\n\n"
        "‚Ä¢ –•–æ—Å—Ç–∏–Ω–≥: Render.com\n"
        "‚Ä¢ –†–µ–≥–∏–æ–Ω: –ï–≤—Ä–æ–ø–∞\n"
        "‚Ä¢ Python: 3.11\n"
        "‚Ä¢ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞: Aiogram\n"
        "‚Ä¢ –°—Ç–∞—Ç—É—Å: üî• –ê–∫—Ç–∏–≤–µ–Ω"
    )

@dp.message(F.text == "üéØ –ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏")
async def tic_tac_toe(message: types.Message):
    await message.answer(
        "üéØ –ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏\n\n"
        "–ò–≥—Ä–∞ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞!\n"
        "–°–ª–µ–¥–∏ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ üöÄ"
    )

@dp.message(F.text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å")
async def show_help(message: types.Message):
    await message.answer(
        "‚ÑπÔ∏è –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É:\n\n"
        "‚Ä¢ /start - –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n"
        "‚Ä¢ /status - —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞\n"
        "‚Ä¢ üéÆ –ò–≥—Ä—ã - –∏–≥—Ä–æ–≤–æ–µ –º–µ–Ω—é\n"
        "‚Ä¢ üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n\n"
        "üìû –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞: @limonfresh2288473747"
    )

@dp.message(F.text == "üöÄ –°—Ç–∞—Ç—É—Å")
async def show_server_status(message: types.Message):
    await message.answer("üü¢ –°–ï–†–í–ï–† –†–ê–ë–û–¢–ê–ï–¢\n\nüìç –•–æ—Å—Ç–∏–Ω–≥: Render.com\n‚ö° –°—Ç–∞—Ç—É—Å: –ê–∫—Ç–∏–≤–µ–Ω\nüîß –¢–µ—Ö–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ: –ù–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")

@dp.message()
async def echo_message(message: types.Message):
    responses = [
        "–û—Ç–ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! üëç",
        "–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—â–µ–Ω–∏–µ! üí¨",
        "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ! –†–∞—Å—Å–∫–∞–∂–∏ –±–æ–ª—å—à–µ ü§î",
        "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ! üöÄ",
        "–°–µ—Ä–≤–µ—Ä Render –æ—Ç–≤–µ—á–∞–µ—Ç –±—ã—Å—Ç—Ä–æ! ‚ö°"
    ]
    import random
    await message.answer(random.choice(responses))

async def main():
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        bot_info = await bot.get_me()
        logger.info(f"‚úÖ –ë–æ—Ç @{bot_info.username} –∑–∞–ø—É—â–µ–Ω –Ω–∞ Render!")
        logger.info("üöÄ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç 24/7")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–ø—Ä–æ—Å
        await dp.start_polling(bot)
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")

if __name__ == "__main__":
    print("=" * 50)
    print("ü§ñ TELEGRAM BOT - RENDER.COM")
    print("=" * 50)
    print("üöÄ –ó–∞–ø—É—Å–∫ –Ω–∞ –æ–±–ª–∞—á–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ...")
    print("üì° –†–µ–∂–∏–º: 24/7")
    print("‚ö° –°—Ç–∞—Ç—É—Å: –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è")
    print("=" * 50)
    
    asyncio.run(main())